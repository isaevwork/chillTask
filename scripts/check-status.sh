#!/bin/bash

# üöÄ ChillTask Status Checker
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ChillTask –ø—Ä–æ–µ–∫—Ç–∞..."
echo "================================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    local service=$2
    local url=$3
    
    if lsof -i :$port >/dev/null 2>&1; then
        echo -e "‚úÖ ${GREEN}$service${NC} - –ü–æ—Ä—Ç $port (${BLUE}$url${NC})"
        return 0
    else
        echo -e "‚ùå ${RED}$service${NC} - –ü–æ—Ä—Ç $port –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP endpoint
check_http() {
    local url=$1
    local service=$2
    
    if curl -s --connect-timeout 3 "$url" >/dev/null 2>&1; then
        echo -e "‚úÖ ${GREEN}$service${NC} - HTTP –¥–æ—Å—Ç—É–ø–µ–Ω (${BLUE}$url${NC})"
        return 0
    else
        echo -e "‚ùå ${RED}$service${NC} - HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${BLUE}$url${NC})"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_docker() {
    local container=$1
    local service=$2
    
    if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$container.*Up"; then
        echo -e "‚úÖ ${GREEN}$service${NC} - Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo -e "‚ùå ${RED}$service${NC} - Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

echo -e "\n${BLUE}üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:${NC}"
echo "-------------------"
check_port 3000 "Frontend (Vite)"
check_port 3001 "Backend (NestJS)"
check_port 5432 "PostgreSQL"
check_port 6379 "Redis"
check_port 5555 "Prisma Studio"

echo -e "\n${BLUE}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoints:${NC}"
echo "---------------------------"
check_http "http://localhost:3000" "Frontend"
check_http "http://localhost:3001" "Backend API"
check_http "http://localhost:3001/api/docs" "Swagger Docs"
check_http "http://localhost:5555" "Prisma Studio"

echo -e "\n${BLUE}üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
echo "--------------------------------"
check_docker "chilltask-postgres" "PostgreSQL"
check_docker "chilltask-redis" "Redis"

echo -e "\n${BLUE}‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
echo "----------------------"
if pgrep -f "vite" >/dev/null; then
    echo -e "‚úÖ ${GREEN}Vite –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ó–∞–ø—É—â–µ–Ω"
else
    echo -e "‚ùå ${RED}Vite –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ù–µ –∑–∞–ø—É—â–µ–Ω"
fi

if pgrep -f "nest" >/dev/null; then
    echo -e "‚úÖ ${GREEN}NestJS –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ó–∞–ø—É—â–µ–Ω"
else
    echo -e "‚ùå ${RED}NestJS –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ù–µ –∑–∞–ø—É—â–µ–Ω"
fi

if pgrep -f "turbo" >/dev/null; then
    echo -e "‚úÖ ${GREEN}Turborepo –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ó–∞–ø—É—â–µ–Ω"
else
    echo -e "‚ùå ${RED}Turborepo –ø—Ä–æ—Ü–µ—Å—Å${NC} - –ù–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo -e "\n${BLUE}üìä –°–≤–æ–¥–∫–∞:${NC}"
echo "=========="

# –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
total_checks=0
passed_checks=0

# –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
for port in 3000 3001 5432 6379 5555; do
    total_checks=$((total_checks + 1))
    if lsof -i :$port >/dev/null 2>&1; then
        passed_checks=$((passed_checks + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∏ HTTP
for url in "http://localhost:3000" "http://localhost:3001" "http://localhost:3001/api/docs" "http://localhost:5555"; do
    total_checks=$((total_checks + 1))
    if curl -s --connect-timeout 3 "$url" >/dev/null 2>&1; then
        passed_checks=$((passed_checks + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∏ Docker
for container in "chilltask-postgres" "chilltask-redis"; do
    total_checks=$((total_checks + 1))
    if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$container.*Up"; then
        passed_checks=$((passed_checks + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
for process in "vite" "nest" "turbo"; do
    total_checks=$((total_checks + 1))
    if pgrep -f "$process" >/dev/null; then
        passed_checks=$((passed_checks + 1))
    fi
done

echo -e "–ü—Ä–æ–π–¥–µ–Ω–æ: ${GREEN}$passed_checks${NC} –∏–∑ ${BLUE}$total_checks${NC} –ø—Ä–æ–≤–µ—Ä–æ–∫"

if [ $passed_checks -eq $total_checks ]; then
    echo -e "üéâ ${GREEN}–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ!${NC}"
    exit 0
elif [ $passed_checks -gt $((total_checks / 2)) ]; then
    echo -e "‚ö†Ô∏è  ${YELLOW}–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã${NC}"
    exit 1
else
    echo -e "üí• ${RED}–ú–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç!${NC}"
    exit 2
fi
